layer {
	name: "steer_motor_target_data"
	type: "DummyData"
	top: "steer_motor_target_data"
	dummy_data_param {
		shape {
			dim: 1
			dim: 20
		}
	}
}



layer {
        name: "metadata"
        type: "DummyData"
        top: "metadata"
        dummy_data_param {
                shape {
                        dim: 1
                        dim: 6
                        dim: 14
                        dim: 26
                }
        }
}




#layer {
#	name: "ZED_data"
#	type: "DummyData"
#	top: "ZED_data"
#	dummy_data_param {
#		shape {
#			dim: 1
#			dim: 12
#			dim: 376
#			dim: 672
#		}
#	}
#}
#
#layer {
#	name: "MVN"
#	type: "MVN"
#	bottom: "ZED_data"
#	top: "MVN"
#	mvn_param {
#		across_channels: 0
#		normalize_variance: 0
#		eps: -128
#	}
#}
#layer {
#	name: "ZED_data_pool1"
#	type: "Pooling"
#	bottom: "ZED_data" #"MVN" #
#	top: "ZED_data_pool1"
#	pooling_param {
#		pool: AVE
#		kernel_size: 3
#		stride: 2
#		pad: 0
#	}
#}
#layer {
#	name: "ZED_data_pool2"
#	type: "Pooling"
#	bottom: "ZED_data_pool1"
#	top: "ZED_data_pool2"
#	pooling_param {
#		pool: AVE
#		kernel_size: 3
#		stride: 2
#		pad: 0
#	}
#}
layer {
	name: "ZED_data_pool2"
	type: "DummyData"
	top: "ZED_data_pool2"
	dummy_data_param {
		shape {
			dim: 1
			dim: 18
			dim: 94
			dim: 168
		}
	}
}
	
###################### Convolutional Layer Set 'conv1' ######################
#
layer {
	name: "conv1"
	type: "Convolution"
	bottom: "ZED_data_pool2"
	top: "conv1"
	convolution_param {
		num_output: 96
		group: 1
		kernel_size: 11
		stride: 3
		pad: 0
		weight_filler {
			type: "gaussian" 
			std: 0.00001
		}
	}
}
	
layer {
	name: "conv1_relu"
	type: "ReLU"
	bottom: "conv1"
	top: "conv1"
}
	
layer {
	name: "conv1_pool"
	type: "Pooling"
	bottom: "conv1"
	top: "conv1_pool"
	pooling_param {
		pool: MAX
		kernel_size: 3
		stride: 2
		pad: 0
	}
}
	
############################################################

layer {
  name: "conv1_metadata_concat"
  type: "Concat"
  bottom: "conv1_pool"
  bottom: "metadata"
  top: "conv1_metadata_concat"
  concat_param {
    axis: 1
  }     
}               
                        


###################### Convolutional Layer Set 'conv2' ######################
#
layer {
	name: "conv2"
	type: "Convolution"
	bottom: "conv1_metadata_concat"
	top: "conv2"
	convolution_param {
		num_output: 256
		group: 2
		kernel_size: 3
		stride: 2
		pad: 0
		weight_filler {
			type: "gaussian" 
			std: 0.1
		}
	}
}
	
layer {
	name: "conv2_relu"
	type: "ReLU"
	bottom: "conv2"
	top: "conv2"
}
	
layer {
	name: "conv2_pool"
	type: "Pooling"
	bottom: "conv2"
	top: "conv2_pool"
	pooling_param {
		pool: MAX
		kernel_size: 3
		stride: 2
		pad: 0
	}
}
	
############################################################


###################### IP Layer Set 'ip1' ######################
#
layer {
	name: "ip1"
	type: "InnerProduct"
	bottom: "conv2_pool"
	top: "ip1"
	inner_product_param {
		num_output: 512
		weight_filler {
			type: "xavier" 
		}
	}
}
	
layer {
	name: "ip1_relu"
	type: "ReLU"
	bottom: "ip1"
	top: "ip1"
}
	
############################################################


###################### IP Layer Set 'ip2' ######################
#
layer {
	name: "ip2"
	type: "InnerProduct"
	bottom: "ip1"
	top: "ip2"
	inner_product_param {
		num_output: 20
		weight_filler {
			type: "xavier" 
		}
	}
}
	

	
############################################################


layer {
	name: "euclidean"
	type: "EuclideanLoss"
	bottom: "ip2"
	bottom: "steer_motor_target_data"
	top: "euclidean"
	loss_weight: 1
}
	
