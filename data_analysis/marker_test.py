from __future__ import print_function
import cv2
import cv2.aruco as aruco
import numpy as np
from PIL import Image
import sys
import rosbag
from cv_bridge import CvBridge, CvBridgeError


#arucoType = aruco.DICT_6X6_100
#arucoType = aruco.DICT_6X6_1000 # The single marker
#arucoType = aruco.DICT_5X5_250


arucoType = aruco.DICT_4X4_250
arucoBoard = aruco.CharucoBoard_create(5,5,0.7,0.5,aruco.Dictionary_get(arucoType))
dictionary = cv2.aruco.getPredefinedDictionary(arucoType)
board = arucoBoard.draw((7014,4962))

# The following is the calibration matrix for the ZED camera

cal = (2.114370012156985, np.array([[  1.20642153e+04,   0.00000000e+00,   3.87673066e+02],
       [  0.00000000e+00,   2.40412556e+04,   6.09900945e+02],
       [  0.00000000e+00,   0.00000000e+00,   1.00000000e+00]]), np.array([[  2.97019230e+01,  -1.81529858e+02,   4.60817372e-01,
         -4.19902342e-01,  -1.34497073e+04]]), [np.array([[ 1.70704508],
       [-1.40506077],
       [ 0.78495047]]), np.array([[ 1.70206233],
       [-1.40638324],
       [ 0.78495157]]), np.array([[ 1.70146247],
       [-1.41368708],
       [ 0.79384946]]), np.array([[ 1.69796995],
       [-1.41720272],
       [ 0.79920426]]), np.array([[ 1.69907829],
       [-1.41360835],
       [ 0.79884496]]), np.array([[ 1.70136348],
       [-1.41082232],
       [ 0.7975795 ]]), np.array([[ 1.70316613],
       [-1.40834826],
       [ 0.79740886]]), np.array([[ 1.71169625],
       [-1.40714856],
       [ 0.78440239]]), np.array([[ 1.71293286],
       [-1.40967729],
       [ 0.79820641]]), np.array([[ 1.71042409],
       [-1.41313491],
       [ 0.80377018]]), np.array([[ 1.70705817],
       [-1.4191452 ],
       [ 0.80891903]]), np.array([[ 1.70255529],
       [-1.42846648],
       [ 0.80837414]]), np.array([[ 1.69442489],
       [-1.44374257],
       [ 0.81957734]]), np.array([[ 1.69140857],
       [-1.45304434],
       [ 0.81550924]]), np.array([[ 1.6842047 ],
       [-1.444301  ],
       [ 0.82100119]]), np.array([[ 1.68223301],
       [-1.46398201],
       [ 0.82349361]]), np.array([[ 1.67206441],
       [-1.47329746],
       [ 0.83011098]]), np.array([[ 1.65673027],
       [-1.49246582],
       [ 0.84367462]]), np.array([[ 1.64755849],
       [-1.50804706],
       [ 0.8496484 ]]), np.array([[ 1.63158358],
       [-1.52380748],
       [ 0.85608521]]), np.array([[ 1.62309175],
       [-1.53222374],
       [ 0.86167713]]), np.array([[ 1.62299897],
       [-1.52732614],
       [ 0.85768523]]), np.array([[ 1.62655832],
       [-1.52682671],
       [ 0.84994522]]), np.array([[ 1.62618635],
       [-1.52760062],
       [ 0.84556304]]), np.array([[ 1.6332752 ],
       [-1.5171412 ],
       [ 0.83420162]]), np.array([[ 1.64925413],
       [-1.49548079],
       [ 0.81622827]]), np.array([[ 1.65961381],
       [-1.4861467 ],
       [ 0.80474238]]), np.array([[ 1.66099686],
       [-1.48616708],
       [ 0.79712931]]), np.array([[ 1.6608171 ],
       [-1.48242283],
       [ 0.79242398]]), np.array([[ 1.66434012],
       [-1.47795699],
       [ 0.78759669]]), np.array([[ 1.66632533],
       [-1.47494394],
       [ 0.78162147]]), np.array([[ 1.67026613],
       [-1.47391467],
       [ 0.77540556]]), np.array([[ 1.67148609],
       [-1.47216183],
       [ 0.76887514]]), np.array([[ 1.670574 ],
       [-1.4736094],
       [ 0.7654618]]), np.array([[ 1.66840251],
       [-1.47596724],
       [ 0.76472772]]), np.array([[ 1.66613443],
       [-1.4811082 ],
       [ 0.76826352]]), np.array([[ 1.66489853],
       [-1.48252763],
       [ 0.76885314]]), np.array([[ 1.66735093],
       [-1.48143639],
       [ 0.76558811]]), np.array([[ 1.66700029],
       [-1.48249515],
       [ 0.7650989 ]]), np.array([[ 1.66744912],
       [-1.48161139],
       [ 0.75874697]]), np.array([[ 1.66408438],
       [-1.48451661],
       [ 0.76203942]]), np.array([[ 1.66629781],
       [-1.48072192],
       [ 0.76008272]]), np.array([[ 2.64667783],
       [-2.47786249],
       [-1.39844093]]), np.array([[ 2.6501844 ],
       [-2.48072467],
       [-1.39364698]]), np.array([[ 2.65121626],
       [-2.48916341],
       [-1.39351146]]), np.array([[ 2.65795394],
       [-2.48843235],
       [-1.39752422]]), np.array([[ 1.65097708],
       [-1.48687509],
       [ 0.77254095]]), np.array([[ 1.64271964],
       [-1.49511984],
       [ 0.78395714]]), np.array([[ 1.63509764],
       [-1.50423439],
       [ 0.79824319]]), np.array([[ 1.63008822],
       [-1.51435231],
       [ 0.81019574]]), np.array([[ 1.6231988 ],
       [-1.51960099],
       [ 0.8191731 ]]), np.array([[ 1.62141928],
       [-1.51690479],
       [ 0.82392538]]), np.array([[ 1.62881418],
       [-1.51529339],
       [ 0.8263965 ]]), np.array([[ 1.6278335 ],
       [-1.51736913],
       [ 0.83009214]]), np.array([[ 1.6291293 ],
       [-1.52354983],
       [ 0.83521267]]), np.array([[ 1.63458993],
       [-1.52334724],
       [ 0.83727364]]), np.array([[ 1.64299305],
       [-1.52477629],
       [ 0.83615003]]), np.array([[ 1.64579702],
       [-1.52451312],
       [ 0.83758506]]), np.array([[ 1.64906122],
       [-1.52353113],
       [ 0.83753614]]), np.array([[ 1.65208369],
       [-1.51921626],
       [ 0.83301168]]), np.array([[ 2.6943012 ],
       [-2.46286284],
       [-1.40762613]]), np.array([[ 1.65317143],
       [-1.5215679 ],
       [ 0.84297302]]), np.array([[ 1.65307857],
       [-1.51604572],
       [ 0.83776656]]), np.array([[ 1.65496395],
       [-1.51656265],
       [ 0.83581247]]), np.array([[ 1.64907592],
       [-1.51225323],
       [ 0.83946401]]), np.array([[-1.63054285],
       [ 1.50242349],
       [ 0.86228325]]), np.array([[-1.61990239],
       [ 1.5083217 ],
       [ 0.87876591]]), np.array([[ 1.64090429],
       [-1.51558339],
       [ 0.8371572 ]]), np.array([[ 1.63865646],
       [-1.51441632],
       [ 0.83768286]]), np.array([[-2.68270704],
       [ 2.47769412],
       [-1.36728338]]), np.array([[-1.61285672],
       [ 1.51895866],
       [ 0.88688107]]), np.array([[-1.61578201],
       [ 1.52029707],
       [ 0.88836364]]), np.array([[-1.61944619],
       [ 1.5197016 ],
       [ 0.88605346]]), np.array([[-1.62139457],
       [ 1.52768367],
       [ 0.88607054]]), np.array([[-1.61786731],
       [ 1.5387372 ],
       [ 0.88667432]]), np.array([[ 2.61509038],
       [-2.48927898],
       [-1.42625672]]), np.array([[ 2.61321995],
       [-2.49075209],
       [-1.42374193]]), np.array([[ 1.64641018],
       [-1.51141142],
       [ 0.79809234]]), np.array([[ 2.60577969],
       [-2.49799848],
       [-1.42435534]]), np.array([[-1.61205291],
       [ 1.55010142],
       [ 0.88212213]]), np.array([[-1.60882838],
       [ 1.55483693],
       [ 0.88365966]]), np.array([[-1.61071795],
       [ 1.55845725],
       [ 0.88253001]]), np.array([[-1.61053979],
       [ 1.56126955],
       [ 0.88198776]]), np.array([[-1.60851092],
       [ 1.56616707],
       [ 0.87917714]]), np.array([[-1.60477793],
       [ 1.57027844],
       [ 0.88078669]]), np.array([[-1.59999273],
       [ 1.57650237],
       [ 0.88414494]]), np.array([[-1.59630459],
       [ 1.57758048],
       [ 0.88464135]]), np.array([[-1.59416311],
       [ 1.57956716],
       [ 0.88451624]]), np.array([[-1.59070221],
       [ 1.58394506],
       [ 0.88705401]]), np.array([[-1.58707136],
       [ 1.58803704],
       [ 0.89015148]]), np.array([[-1.58483334],
       [ 1.58995174],
       [ 0.89156865]]), np.array([[-1.58283203],
       [ 1.59467868],
       [ 0.89483428]]), np.array([[-1.57983425],
       [ 1.59652871],
       [ 0.89739928]]), np.array([[-1.57731179],
       [ 1.59988876],
       [ 0.89467974]]), np.array([[ 2.51379187],
       [-2.56117595],
       [-1.44080895]]), np.array([[ 2.5155036 ],
       [-2.56497305],
       [-1.42957839]]), np.array([[ 2.53021419],
       [-2.55798964],
       [-1.43049455]]), np.array([[ 2.54529652],
       [-2.55122826],
       [-1.43034713]])], [np.array([[  1.54772679],
       [ -0.56775139],
       [ 98.42633704]]), np.array([[  1.34990753],
       [ -0.5568345 ],
       [ 95.95418668]]), np.array([[  1.24798939],
       [ -0.54645255],
       [ 93.29380515]]), np.array([[  1.17284683],
       [ -0.51031604],
       [ 91.17953588]]), np.array([[  1.10440642],
       [ -0.47672949],
       [ 89.31946112]]), np.array([[  0.9914226 ],
       [ -0.46787311],
       [ 87.22262846]]), np.array([[  0.87487418],
       [ -0.45058637],
       [ 85.29618474]]), np.array([[  0.69474063],
       [ -0.44193054],
       [ 83.24737775]]), np.array([[  0.6102618 ],
       [ -0.44346554],
       [ 81.2816613 ]]), np.array([[  0.65942841],
       [ -0.44969737],
       [ 79.97055818]]), np.array([[  0.71451365],
       [ -0.46154845],
       [ 78.91795233]]), np.array([[  0.80815936],
       [ -0.45364487],
       [ 77.89436279]]), np.array([[  0.99935383],
       [ -0.43642811],
       [ 78.24014095]]), np.array([[  1.1652606 ],
       [ -0.38830853],
       [ 80.04638186]]), np.array([[  1.10300055],
       [ -0.35895188],
       [ 82.14694579]]), np.array([[  1.18838455],
       [ -0.29986978],
       [ 85.42736366]]), np.array([[  1.28247385],
       [ -0.27547956],
       [ 88.43218841]]), np.array([[  1.53365748],
       [ -0.26821315],
       [ 91.52790725]]), np.array([[  1.80579478],
       [ -0.24382595],
       [ 94.54364487]]), np.array([[  2.13700072],
       [ -0.21229329],
       [ 97.39647621]]), np.array([[  2.45900705],
       [ -0.21717016],
       [ 99.84501772]]), np.array([[   2.80617872],
       [  -0.26693134],
       [ 102.04502568]]), np.array([[   3.19543986],
       [  -0.32281672],
       [ 103.87603164]]), np.array([[   3.58072701],
       [  -0.37249331],
       [ 105.28525165]]), np.array([[   3.9369148 ],
       [  -0.421139  ],
       [ 106.26368731]]), np.array([[   4.22006978],
       [  -0.46110981],
       [ 106.66557851]]), np.array([[   4.54857783],
       [  -0.47637841],
       [ 107.05791576]]), np.array([[   4.89728211],
       [  -0.43754434],
       [ 107.43220897]]), np.array([[   5.16883002],
       [  -0.40714159],
       [ 107.46865407]]), np.array([[   5.40974182],
       [  -0.3981102 ],
       [ 107.25627145]]), np.array([[   5.65445281],
       [  -0.40582318],
       [ 106.90304416]]), np.array([[   5.85005727],
       [  -0.40627452],
       [ 106.26474219]]), np.array([[   6.01884278],
       [  -0.39308384],
       [ 105.51722719]]), np.array([[   6.07374246],
       [  -0.38393441],
       [ 104.53151287]]), np.array([[   6.05455079],
       [  -0.35442657],
       [ 103.50208891]]), np.array([[   6.05594196],
       [  -0.33318872],
       [ 102.70629872]]), np.array([[   6.11781946],
       [  -0.30182979],
       [ 102.03282054]]), np.array([[   6.1863428 ],
       [  -0.29205216],
       [ 101.34868226]]), np.array([[   6.28377954],
       [  -0.28836662],
       [ 100.88113621]]), np.array([[   6.30764545],
       [  -0.28835763],
       [ 100.30670086]]), np.array([[  6.27134838],
       [ -0.28530321],
       [ 99.88112436]]), np.array([[  6.2370538 ],
       [ -0.29788716],
       [ 99.41651369]]), np.array([[   6.32553583],
       [  -0.33053808],
       [ 101.86441785]]), np.array([[   6.19004025],
       [  -0.30832345],
       [ 100.90650137]]), np.array([[   5.90193513],
       [  -0.27300868],
       [ 100.30167396]]), np.array([[  5.47600208],
       [ -0.25085695],
       [ 99.63258411]]), np.array([[  4.92216788],
       [ -0.1603009 ],
       [ 95.47120795]]), np.array([[  4.48192945e+00],
       [ -8.60241188e-02],
       [  9.41218333e+01]]), np.array([[  4.03194167e+00],
       [ -1.83657523e-02],
       [  9.23132249e+01]]), np.array([[  3.68836875e+00],
       [  5.08379499e-02],
       [  9.06690979e+01]]), np.array([[  3.36119841],
       [  0.09904394],
       [ 88.80761111]]), np.array([[  2.94900668],
       [  0.1258219 ],
       [ 86.53744761]]), np.array([[  2.53447132],
       [  0.11462745],
       [ 84.3057863 ]]), np.array([[  2.14422605],
       [  0.12820085],
       [ 81.48409843]]), np.array([[  1.77463283],
       [  0.1381406 ],
       [ 78.96285704]]), np.array([[  1.44062975],
       [  0.12965286],
       [ 77.1670167 ]]), np.array([[  1.19767815],
       [  0.11786748],
       [ 75.9619142 ]]), np.array([[  1.04609441],
       [  0.09325087],
       [ 75.02416515]]), np.array([[  1.01059750e+00],
       [  2.31952274e-02],
       [  7.41612645e+01]]), np.array([[  1.02926933e+00],
       [ -4.60085816e-02],
       [  7.33432878e+01]]), np.array([[  1.11888766],
       [ -0.15025139],
       [ 75.60072789]]), np.array([[  1.28350119],
       [ -0.20815297],
       [ 72.90570525]]), np.array([[  1.43990948],
       [ -0.2537417 ],
       [ 73.0835663 ]]), np.array([[  1.58518421],
       [ -0.26886041],
       [ 73.3679241 ]]), np.array([[  1.76773552],
       [ -0.2770822 ],
       [ 73.96753065]]), np.array([[  1.96639041],
       [ -0.3005857 ],
       [ 77.36716718]]), np.array([[  2.2345051 ],
       [ -0.26290818],
       [ 78.87318946]]), np.array([[  2.42901085],
       [ -0.19893238],
       [ 77.34102286]]), np.array([[  2.62236512],
       [ -0.19937074],
       [ 78.30943338]]), np.array([[  2.81747491],
       [ -0.2102262 ],
       [ 79.10279287]]), np.array([[  3.11444123],
       [ -0.25989657],
       [ 83.47436367]]), np.array([[  3.4284185 ],
       [ -0.30106135],
       [ 84.9260238 ]]), np.array([[  3.73263499],
       [ -0.32059054],
       [ 86.36659423]]), np.array([[  4.05885116],
       [ -0.31890757],
       [ 87.72980285]]), np.array([[  4.39310559],
       [ -0.26540827],
       [ 89.13455232]]), np.array([[  4.62126342],
       [ -0.21783302],
       [ 90.151838  ]]), np.array([[  4.78504846],
       [ -0.17620907],
       [ 90.89344928]]), np.array([[  4.88126692],
       [ -0.10411007],
       [ 88.67359864]]), np.array([[  5.16993551],
       [ -0.12984454],
       [ 92.55609845]]), np.array([[  5.28897857],
       [ -0.15651196],
       [ 92.82421257]]), np.array([[  5.37649143],
       [ -0.1721145 ],
       [ 92.92672632]]), np.array([[  5.44934933],
       [ -0.16583117],
       [ 92.84845973]]), np.array([[  5.54318474],
       [ -0.12231748],
       [ 92.79495162]]), np.array([[  5.60264993e+00],
       [ -5.90403119e-02],
       [  9.26851551e+01]]), np.array([[  5.62492949e+00],
       [  7.05814721e-03],
       [  9.26827762e+01]]), np.array([[  5.68698237e+00],
       [  4.83178187e-02],
       [  9.27279554e+01]]), np.array([[  5.69445141e+00],
       [  8.32836316e-02],
       [  9.25460834e+01]]), np.array([[  5.67659571],
       [  0.10044882],
       [ 92.25422089]]), np.array([[  5.63547485],
       [  0.13261665],
       [ 92.00072129]]), np.array([[  5.63336163],
       [  0.16871654],
       [ 92.01249148]]), np.array([[  5.62368652],
       [  0.20959206],
       [ 91.9543307 ]]), np.array([[  5.65859161],
       [  0.24623726],
       [ 91.78047352]]), np.array([[  5.70659522],
       [  0.25290133],
       [ 91.32857774]]), np.array([[  5.66878654],
       [  0.2840895 ],
       [ 90.47907914]]), np.array([[  5.49957398],
       [  0.31944299],
       [ 88.93642039]]), np.array([[  5.21579681],
       [  0.38574691],
       [ 87.30202189]]), np.array([[  4.79437398],
       [  0.44784542],
       [ 85.15432093]]), np.array([[  4.38404303],
       [  0.49710634],
       [ 83.0720789 ]])])

bridge = CvBridge()
bag = rosbag.Bag(sys.argv[1])

aruco_dict = dictionary
parameters =  aruco.DetectorParameters_create()


for topic, msg, t in bag.read_messages(topics=['/bair_car/zed/left/image_rect_color']):#, '/bair_car/encoder']):
    cv_image = bridge.imgmsg_to_cv2(msg, "bgr8")

    res = aruco.detectMarkers(cv_image, aruco_dict, parameters=parameters)

    corners = res[0]
    ids = res[1]
    
    if len(corners)>0:
        cv_image = aruco.drawDetectedMarkers(cv_image, corners)  
        
    cv2.imshow('frame',cv_image)
    if cv2.waitKey(1000/30) & 0xFF == ord('q'):
        break
               

cv2.destroyAllWindows()
bag.close()
