# /Users/karlzipser/kzpy3/caf7/z3_color
# Tuesday, 07 Mar 2017, 01:38:09 AM

layer {
	name: "left"
	type: "DummyData"
	top: "left"
	dummy_data_param {
		shape {
			dim: 1
			dim: 12
			dim: 376
			dim: 672
		}
	}
}
	

layer {
	name: "left_pool"
	type: "Pooling"
	bottom: "left"
	top: "left_pool"
	pooling_param {
		pool: AVE
		kernel_size: 3
		stride: 2
		pad_h: 0
		pad_w: 0
	}
}
	

layer {
	name: "left_pool_pool"
	type: "Pooling"
	bottom: "left_pool"
	top: "left_pool_pool"
	pooling_param {
		pool: AVE
		kernel_size: 3
		stride: 2
		pad_h: 0
		pad_w: 0
	}
}
	

layer {
	name: "right"
	type: "DummyData"
	top: "right"
	dummy_data_param {
		shape {
			dim: 1
			dim: 6
			dim: 376
			dim: 672
		}
	}
}
	

layer {
	name: "right_pool"
	type: "Pooling"
	bottom: "right"
	top: "right_pool"
	pooling_param {
		pool: AVE
		kernel_size: 3
		stride: 2
		pad_h: 0
		pad_w: 0
	}
}
	

layer {
	name: "right_pool_pool"
	type: "Pooling"
	bottom: "right_pool"
	top: "right_pool_pool"
	pooling_param {
		pool: AVE
		kernel_size: 3
		stride: 2
		pad_h: 0
		pad_w: 0
	}
}
	

layer {
	name: "steer_motor_target_data"
	type: "DummyData"
	top: "steer_motor_target_data"
	dummy_data_param {
		shape {
			dim: 1
			dim: 60
		}
	}
}
	

layer {
	name: "metadata"
	type: "DummyData"
	top: "metadata"
	dummy_data_param {
		shape {
			dim: 1
			dim: 6
			dim: 11
			dim: 20
		}
	}
}
	

layer {
	name: "past_steer"
	type: "DummyData"
	top: "past_steer"
	dummy_data_param {
		shape {
			dim: 1
			dim: 30
			dim: 11
			dim: 20
		}
	}
}
	

layer {
	name: "past_motor"
	type: "DummyData"
	top: "past_motor"
	dummy_data_param {
		shape {
			dim: 1
			dim: 30
			dim: 11
			dim: 20
		}
	}
}
	

layer {
	name: "xy_gradients"
	type: "DummyData"
	top: "xy_gradients"
	dummy_data_param {
		shape {
			dim: 1
			dim: 2
			dim: 11
			dim: 20
		}
	}
}
	

layer {
	name: "conv1_left"
	type: "Convolution"
	bottom: "left_pool_pool"
	top: "conv1_left"
	convolution_param {
		num_output: 48
		group: 1
		kernel_size: 3
		stride: 2
		pad_h: 0
		pad_w: 0
		weight_filler {
			type: "gaussian" 
			std: 0.00001
		}
	}
}
	

layer {
	name: "conv1_left_relu"
	type: "ReLU"
	bottom: "conv1_left"
	top: "conv1_left"
}
	

layer {
	name: "conv1_left_pool"
	type: "Pooling"
	bottom: "conv1_left"
	top: "conv1_left_pool"
	pooling_param {
		pool: MAX
		kernel_size: 3
		stride: 2
		pad_h: 0
		pad_w: 0
	}
}
	

layer {
	name: "conv1_right"
	type: "Convolution"
	bottom: "right_pool_pool"
	top: "conv1_right"
	convolution_param {
		num_output: 48
		group: 1
		kernel_size: 3
		stride: 2
		pad_h: 0
		pad_w: 0
		weight_filler {
			type: "gaussian" 
			std: 0.00001
		}
	}
}
	

layer {
	name: "conv1_right_relu"
	type: "ReLU"
	bottom: "conv1_right"
	top: "conv1_right"
}
	

layer {
	name: "conv1_right_pool"
	type: "Pooling"
	bottom: "conv1_right"
	top: "conv1_right_pool"
	pooling_param {
		pool: MAX
		kernel_size: 3
		stride: 2
		pad_h: 0
		pad_w: 0
	}
}
	

layer {
	type: 'Concat'
	name: 'conv1_concat'
	bottom: "conv1_left"
	bottom: "conv1_right"
	top: 'conv1_concat'
	concat_param {
		axis: 1
	}
}
		

layer {
	type: 'Concat'
	name: 'conv1_pool_concat'
	bottom: "conv1_left_pool"
	bottom: "conv1_right_pool"
	top: 'conv1_pool_concat'
	concat_param {
		axis: 1
	}
}
		

layer {
	name: "conv2a_bi"
	type: "Convolution"
	bottom: "conv1_concat"
	top: "conv2a_bi"
	convolution_param {
		num_output: 96
		group: 1
		kernel_size: 3
		stride: 2
		pad_h: 0
		pad_w: 0
		weight_filler {
			type: "gaussian" 
			std: 0.1
		}
	}
}
	

layer {
	name: "conv2a_bi_relu"
	type: "ReLU"
	bottom: "conv2a_bi"
	top: "conv2a_bi"
}
	

layer {
	name: "conv2a_bi_pool"
	type: "Pooling"
	bottom: "conv2a_bi"
	top: "conv2a_bi_pool"
	pooling_param {
		pool: MAX
		kernel_size: 3
		stride: 2
		pad_h: 0
		pad_w: 0
	}
}
	

layer {
	name: "conv2b_bi"
	type: "Convolution"
	bottom: "conv1_pool_concat"
	top: "conv2b_bi"
	convolution_param {
		num_output: 96
		group: 1
		kernel_size: 3
		stride: 2
		pad_h: 0
		pad_w: 0
		weight_filler {
			type: "gaussian" 
			std: 0.1
		}
	}
}
	

layer {
	name: "conv2b_bi_relu"
	type: "ReLU"
	bottom: "conv2b_bi"
	top: "conv2b_bi"
}
	

layer {
	name: "past_steer_drop"
	type: "Dropout"
	bottom: "past_steer"
	top: "past_steer"
	dropout_param {
		dropout_ratio: 0.5
	}
}
	

layer {
	name: "past_motor_drop"
	type: "Dropout"
	bottom: "past_motor"
	top: "past_motor"
	dropout_param {
		dropout_ratio: 0.5
	}
}
	

layer {
	type: 'Concat'
	name: 'conv2_concat'
	bottom: "conv2a_bi_pool"
	bottom: "conv2b_bi"
	bottom: "metadata"
	bottom: "past_steer"
	bottom: "past_motor"
	bottom: "xy_gradients"
	top: 'conv2_concat'
	concat_param {
		axis: 1
	}
}
		

layer {
	name: "conv2_1x1"
	type: "Convolution"
	bottom: "conv2_concat"
	top: "conv2_1x1"
	convolution_param {
		num_output: 96
		group: 1
		kernel_size: 1
		stride: 1
		pad_h: 0
		pad_w: 0
		weight_filler {
			type: "gaussian" 
			std: 0.1
		}
	}
}
	

layer {
	name: "conv2_1x1_relu"
	type: "ReLU"
	bottom: "conv2_1x1"
	top: "conv2_1x1"
}
	

layer {
	name: "conv2_3x3"
	type: "Convolution"
	bottom: "conv2_concat"
	top: "conv2_3x3"
	convolution_param {
		num_output: 96
		group: 1
		kernel_size: 3
		stride: 1
		pad_h: 1
		pad_w: 1
		weight_filler {
			type: "gaussian" 
			std: 0.1
		}
	}
}
	

layer {
	name: "conv2_3x3_relu"
	type: "ReLU"
	bottom: "conv2_3x3"
	top: "conv2_3x3"
}
	

layer {
	type: 'Concat'
	name: 'conv2_final_concat'
	bottom: "conv2_1x1"
	bottom: "conv2_3x3"
	top: 'conv2_final_concat'
	concat_param {
		axis: 1
	}
}
		

layer {
	name: "conv3"
	type: "Convolution"
	bottom: "conv2_final_concat"
	top: "conv3"
	convolution_param {
		num_output: 96
		group: 1
		kernel_size: 3
		stride: 1
		pad_h: 1
		pad_w: 1
		weight_filler {
			type: "gaussian" 
			std: 0.1
		}
	}
}
	

layer {
	name: "conv3_relu"
	type: "ReLU"
	bottom: "conv3"
	top: "conv3"
}
	

layer {
	name: "conv3_pool"
	type: "Pooling"
	bottom: "conv3"
	top: "conv3_pool"
	pooling_param {
		pool: MAX
		kernel_size: 3
		stride: 2
		pad_h: 0
		pad_w: 0
	}
}
	

layer {
	name: "ip1"
	type: "InnerProduct"
	bottom: "conv3_pool"
	top: "ip1"
	inner_product_param {
		num_output: 512
		weight_filler {
			type: "xavier" 
		}
	}
}
	

layer {
	name: "ip1_relu"
	type: "ReLU"
	bottom: "ip1"
	top: "ip1"
}
	

layer {
	name: "ip1_drop"
	type: "Dropout"
	bottom: "ip1"
	top: "ip1"
	dropout_param {
		dropout_ratio: 0.0
	}
}
	

layer {
	name: "ip2"
	type: "InnerProduct"
	bottom: "ip1"
	top: "ip2"
	inner_product_param {
		num_output: 60
		weight_filler {
			type: "xavier" 
		}
	}
}
	

layer {
	name: "euclidean"
	type: "EuclideanLoss"
	bottom: "steer_motor_target_data"
	bottom: "ip2"
	top: "euclidean"
	loss_weight: 1
}
	
